CREATE DATABASE CHAT;

USE CHAT;

CREATE TABLE USERS (
	USER_NAME VARCHAR(64),
	PSW_HASH VARCHAR(128) UNIQUE,
	PRIMARY KEY(USER_NAME)
);

CREATE TABLE USER_SESSION_TOKENS (
	USER_NAME VARCHAR(64),
	DOB DATETIME, 
	TOKEN VARCHAR(256) UNIQUE,
	PRIMARY KEY(USER_NAME, DOB), 
	FOREIGN KEY (USER_NAME) REFERENCES USERS(USER_NAME) 
);

CREATE TABLE ROOMS (
	ROOM_NAME VARCHAR(64),
	ROOM_DESC VARCHAR(64),
	PRIMARY KEY(ROOM_NAME)
);

CREATE TABLE ROOM_MESSAGES (
	ROOM_NAME VARCHAR(64),
	USER_NAME VARCHAR(64),
	MTIME DATETIME, 
	MESSAGE VARCHAR(512),
	PRIMARY KEY(ROOM_NAME, USER_NAME, MTIME),
	FOREIGN KEY (USER_NAME) REFERENCES USERS(USER_NAME),
	FOREIGN KEY (ROOM_NAME) REFERENCES ROOMS(ROOM_NAME)
);

DELIMITER n_n 
CREATE PROCEDURE ADD_USER(IN PASSED_USER_NAME VARCHAR(64), IN PASSED_USER_PASS VARCHAR(512))
BEGIN 
SET @TEMP_USER_NAME = NULL;
SELECT USER_NAME INTO @TEMP_USER_NAME FROM USERS WHERE USER_NAME = PASSED_USER_NAME;
IF (@TEMP_USER_NAME IS NULL) THEN 
INSERT INTO USERS (USER_NAME, PSW_HASH ) VALUES (PASSED_USER_NAME, SHA2(PASSED_USER_PASS, 512)); 
SELECT USER_NAME INTO @TEMP_USER_NAME FROM USERS WHERE USER_NAME = PASSED_USER_NAME;
IF (@TEMP_USER_NAME = PASSED_USER_NAME) THEN
SELECT 1 AS VALID; 
ELSE 
SELECT 0 AS VALID; 
END IF;
ELSE 
SELECT 0 AS VALID; 
END IF;
END 
n_n 
DELIMITER ;

DELIMITER n_n 
CREATE PROCEDURE LOGIN_USER(IN PASSED_USER_NAME VARCHAR(64), IN PASSED_USER_PASS VARCHAR(512)) 
BEGIN 
SET @TEMP_USER_NAME = NULL;
SELECT USER_NAME INTO @TEMP_USER_NAME FROM USERS WHERE USER_NAME = PASSED_USER_NAME AND PSW_HASH = SHA2(PASSED_USER_PASS, 512); 
IF (@TEMP_USER_NAME = PASSED_USER_NAME) THEN 
SET @TEMP_TOKEN = CONCAT(SHA2(@TEMP_USER_NAME,512), SHA2(CONCAT('R:', RAND()), 512));
INSERT INTO USER_SESSION_TOKENS (USER_NAME, DOB, TOKEN) VALUES (@TEMP_USER_NAME, NOW(), @TEMP_TOKEN); 
SELECT 1 AS VALID, @TEMP_TOKEN AS TOKEN; 
ELSE 
SELECT 0 AS VALID, 'ERROR' AS TOKEN;
END IF;
END 
n_n 
DELIMITER ;

DELIMITER n_n 
CREATE PROCEDURE GET_ROOMS(IN PASSED_TOKEN VARCHAR(256)) 
BEGIN 
SET @TEMP_USER_NAME = NULL;
SET  @TEMP_DOB = NULL;
SELECT USER_NAME, DOB INTO @TEMP_USER_NAME, @TEMP_DOB FROM USER_SESSION_TOKENS WHERE TOKEN = PASSED_TOKEN;
IF (@TEMP_USER_NAME IS NOT NULL AND @TEMP_DOB IS NOT NULL) THEN 
SET @MAX_DOB  = NULL;
SELECT MAX(DOB) INTO @MAX_DOB FROM USER_SESSION_TOKENS WHERE USER_NAME = @TEMP_USER_NAME;
IF(@MAX_DOB = @TEMP_DOB AND TIMESTAMPDIFF(SECOND, NOW(),DATE_ADD( @TEMP_DOB, INTERVAL 8 HOUR)) > 0) THEN 
SELECT 1 AS VALID, ROOM_NAME, ROOM_DESC FROM ROOMS;
ELSE 
SELECT 0 AS VALID, 'ERROR' ROOM_NAME, 'ERROR' ROOM_DESC;
END IF;
ELSE 
SELECT 0 AS VALID, 'ERROR' ROOM_NAME, 'ERROR' ROOM_DESC;
END IF;
END 
n_n 
DELIMITER ;

DELIMITER n_n 
CREATE PROCEDURE ADD_ROOM_MESSAGE(IN PASSED_TOKEN VARCHAR(256), IN PROOM_NAME VARCHAR(64), IN PMESSAGE VARCHAR(512)) 
BEGIN 
SET @TEMP_USER_NAME = NULL;
SET  @TEMP_DOB = NULL;
SELECT USER_NAME, DOB INTO @TEMP_USER_NAME, @TEMP_DOB FROM USER_SESSION_TOKENS WHERE TOKEN = PASSED_TOKEN;
IF (@TEMP_USER_NAME IS NOT NULL AND @TEMP_DOB IS NOT NULL) THEN 
SET @MAX_DOB  = NULL;
SELECT MAX(DOB) INTO @MAX_DOB FROM USER_SESSION_TOKENS WHERE USER_NAME = @TEMP_USER_NAME;
IF(@MAX_DOB = @TEMP_DOB AND TIMESTAMPDIFF(SECOND, NOW(),DATE_ADD( @TEMP_DOB, INTERVAL 8 HOUR)) > 0) THEN 
INSERT INTO ROOM_MESSAGES (ROOM_NAME, USER_NAME, MTIME, MESSAGE) VALUES (PROOM_NAME, @TEMP_USER_NAME, NOW() ,PMESSAGE); 
SELECT  1 AS VALID;
ELSE 
SELECT  0 AS VALID;
END IF;
ELSE 
SELECT  0 AS VALID;
END IF;
END 
n_n 
DELIMITER ;

--
DELIMITER n_n 
CREATE PROCEDURE GET_ALL_ROOM_MESSAGES(IN PASSED_TOKEN VARCHAR(256), IN PROOM_NAME VARCHAR(64)) 
BEGIN 
SET @TEMP_USER_NAME = NULL;
SET  @TEMP_DOB = NULL;
SELECT USER_NAME, DOB INTO @TEMP_USER_NAME, @TEMP_DOB FROM USER_SESSION_TOKENS WHERE TOKEN = PASSED_TOKEN;
IF (@TEMP_USER_NAME IS NOT NULL AND @TEMP_DOB IS NOT NULL) THEN 
SET @MAX_DOB  = NULL;
SELECT MAX(DOB) INTO @MAX_DOB FROM USER_SESSION_TOKENS WHERE USER_NAME = @TEMP_USER_NAME;
IF(@MAX_DOB = @TEMP_DOB AND TIMESTAMPDIFF(SECOND, NOW(),DATE_ADD( @TEMP_DOB, INTERVAL 8 HOUR)) > 0) THEN 

SELECT  COUNT(*) INTO @MSG_CNT FROM ROOM_MESSAGES WHERE ROOM_NAME  = PROOM_NAME ORDER BY MTIME;

IF(@MSG_CNT > 0) THEN 
SELECT  1 AS VALID, USER_NAME, MTIME, MESSAGE FROM ROOM_MESSAGES WHERE ROOM_NAME  = PROOM_NAME ORDER BY MTIME;
ELSE 
SELECT  1 AS VALID, 'no msgs' USER_NAME, 'no msgs' MTIME, 'no msgs' MESSAGE;
END IF;

ELSE 
SELECT  0 AS VALID, 'ERROR' USER_NAME, 'ERROR' MTIME, 'ERROR' MESSAGE FROM ROOM_MESSAGES WHERE ROOM_NAME  = PROOM_NAME;
END IF;
ELSE 
SELECT  0 AS VALID, 'ERROR' USER_NAME, 'ERROR' MTIME, 'ERROR' MESSAGE FROM ROOM_MESSAGES WHERE ROOM_NAME  = PROOM_NAME;
END IF;
END 
n_n 
DELIMITER ;




CALL ADD_USER('root', 'pass1');
CALL ADD_USER('admin', 'pass2');
INSERT INTO ROOMS (ROOM_NAME, ROOM_DESC ) VALUES ('main', 'This is the main chat room.');
INSERT INTO ROOMS (ROOM_NAME, ROOM_DESC ) VALUES ('general', 'This room is for general chat.');
INSERT INTO ROOMS (ROOM_NAME, ROOM_DESC ) VALUES ('anime', 'This room is for anime topics.');